apiVersion: v1
kind: ConfigMap
metadata:
  name: upf-configmap
  labels:
    app: free5gc
data:
  upfcfg.yaml: |
    version: 1.0.3
    description: UPF initial local configuration

    # The listen IP and nodeID of the N4 interface on this UPF (Can't set to 0.0.0.0)
    pfcp:
      addr: 10.100.50.241   # IP addr for listening
      nodeID: 10.100.50.241 # External IP or FQDN can be reached
      retransTimeout: 1s # retransmission timeout
      maxRetrans: 3 # the max number of retransmission

    gtpu:
      forwarder: gtp5g
      # The IP list of the N3/N9 interfaces on this UPF
      # If there are multiple connection, set addr to 0.0.0.0 or list all the addresses
      ifList:
        - addr: 10.100.50.233
          type: N3
          # name: upf.5gc.nctu.me
          # ifname: gtpif
    dnnList:
    - cidr: 10.1.0.0/17
      dnn: internet
      natifname: n6
    logger:
      enable: true
      level: info
      reportCaller: false

  wrapper.sh: |
    #!/bin/sh

    ### Implement networking rules
    iptables -A FORWARD -j ACCEPT
    iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -o n6 -j MASQUERADE  # route traffic comming from the UE SUBNET to the interface N6
    echo "1200 n6if" >> /etc/iproute2/rt_tables # create a routing table for the interface N6
    ip rule add from 10.1.0.0/16 table n6if   # use the created ip table to route the traffic comming from the UE SUBNET
    ip route add default via 10.100.100.1 dev n6 table n6if  # add a default route in the created table so that all UEs will use this gateway for external communications (target IP not in the Data Network attached to the interface N6) and then the Data Network will manage to route the traffic

    /free5gc/upf/upf -c /free5gc/config//upfcfg.yaml

